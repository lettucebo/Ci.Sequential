trigger:
  branches:
    include:
      - refs/tags/*

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
  - stage: Build
    displayName: Build nuget package
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'windows-latest'

        steps:
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: 'build'
              projects: '**/*.csproj'
              arguments: '--configuration $(BuildConfiguration)'

          - task: NuGetCommand@2
            displayName: 'NuGet pack Ci.Sequential'
            inputs:
              command: 'pack'
              packagesToPack: 'src/Ci.Sequential\Ci.Sequential.csproj'
              includeSymbols: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy To Nuget.org
        environment: 'production'
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: NuGetCommand@2
                  inputs:
                    command: 'push'
                    packagesToPush: '$(System.ArtifactsDirectory)/**/*.nupkg;!$(System.ArtifactsDirectory)/**/*.symbols.nupkg'
                    nuGetFeedType: 'external'
                    publishFeedCredentials: 'Nuget.org'